/* On-screen Keyboard */

$key_size: 1.2em;
$key_border_radius: $base_border_radius * 1.25;
$key_bg_color:  darken($osd_fg_color, 70%);
// $default_key_bg_color: darken($key_bg_color, 4%);
$default_key_bg_color: if($variant=='light', darken($key_bg_color, 11%), darken($key_bg_color, 10%));

$key_bg_color: if(variant=='light', $bg_color, darken($bg_color, 1%)); // Yaru: Make keyboard buttons work on both variants
$default_key_bg_color: $key_bg_color; // Yaru: Make keyboard buttons work on both variants
// $default_key_bg_color: if($variant=='light', darken($osd_bg_color, 11%), lighten($osd_bg_color, 2%));


// draw keys using button function
#keyboard { // Yaru change: Make keyboard work on both variants
  background-color: transparentize(if($variant=='light', darken($bg_color, 5%), darken($bg_color, 15%)), 0.1);
  // background-color: $osd_bg_color;
  // box-shadow: inset 0 1px 0 0 $osd_outer_borders_color;

  .page-indicator {
    padding: $base_padding;

    .page-indicator-icon {
      width: 8px;
      height: 8px;
    }
  }
}

// the container for individual keys
.key-container {
  padding: $base_margin;
  spacing: $base_margin;
}

// the keys
.keyboard-key {
  @include fontsize($base_font_size + 5pt);
  font-weight: bold;
  min-height: $key_size;
  min-width: $key_size;
  border-width: 1px;
  border-style: solid;
  border-radius: $key_border_radius;
  box-shadow: 0 1px 0 0 $shadow_color;

  @include button(normal, $c:$key_bg_color, $tc:$fg_color); // Yaru: Support both variants

  &:focus { @include button(focus);}
  &:hover { @include button(hover, $c:$key_bg_color, $tc:$fg_color);} // Yaru: Support both variants
  &:active { @include button(active, $c:$key_bg_color, $tc:$fg_color); } // Yaru: Support both variants
  &:checked { @include button(checked, $c:$key_bg_color, $tc:$fg_color); } // Yaru: Support both variants

  &:grayed { //FIXMEy
    background-color: darken($bg_color, 3%);
    color: $fg_color; // Yaru change: ↑↑↑
    border-color: $osd_borders_color;
  }

  // non-character keys
  &.default-key {
    @include button(normal, $c:$default_key_bg_color, $tc:$fg_color); // Yaru: Support both variants
    &:hover { @include button(hover, $c:$default_key_bg_color, $tc:$fg_color);} // Yaru: Support both variants
    &:active { @include button(active, $c:$default_key_bg_color, $tc:$fg_color);} // Yaru: Support both variants
    &:checked { @include button(checked, $c:$default_key_bg_color, $tc:$fg_color);} // Yaru: Support both variants
    border-radius: $key_border_radius;

    // keys that may be latched: ctrl/alt/shift
    &:latched {
      border-color: st-lighten(-st-accent-color, 5%);
      background-color: -st-accent-color;
    }
  }

  // enter key is suggested-action
  &.enter-key {
/*  Yaru: use our suggested action color
    @include button(normal, $c:-st-accent-color, $tc:-st-accent-fg-color);
    &:hover { @include button(hover, $c:-st-accent-color, $tc:-st-accent-fg-color);}
    &:active { @include button(active, $c:-st-accent-color, $tc:-st-accent-fg-color);}
    &:checked { @include button(checked, $c:-st-accent-color, $tc:-st-accent-fg-color);}
*/
    @include button(normal, $c:$suggested_bg_color, $tc:-st-accent-fg-color);
    &:hover { @include button(hover, $c:$suggested_bg_color, $tc:-st-accent-fg-color);}
    &:active { @include button(active, $c:$suggested_bg_color, $tc:-st-accent-fg-color);}
    &:checked { @include button(checked, $c:$suggested_bg_color, $tc:-st-accent-fg-color);}

    border-radius: $key_border_radius;
    color: $osd_fg_color;
  }

  &.shift-key-lowercase {}

  // pressed shift has different style
  &.shift-key-uppercase {
    background-color: if($variant=="light", darken($key_bg_color, 10%), lighten($key_bg_color, 20%)); // Yaru change: ↑↑↑
    color: $fg_color; // Yaru change: ↑↑↑
    &:hover {
      background-color: if($variant=="light", darken($key_bg_color, 13%), lighten($key_bg_color, 25%)); // Yaru change: ↑↑↑
      // color: lighten($osd_bg_color, 5%); // Yaru change: ↑↑↑
    }
  }

  // size of icons on keys
  StIcon { icon-size: $medium_icon_size; }
}

// long press on a key popup
.keyboard-subkeys {
  -arrow-border-radius: $base_border_radius * 2;
  -arrow-background-color: $osd_bg_color;
  // Yaru: Make keyboard popups work on both variants
  -arrow-background-color: transparentize(if($variant=='light', darken($bg_color, 5%), darken($bg_color, 8%)), 0.1);
  -arrow-border-width: 1px;
  -arrow-border-color: $borders_color; // Yaru: Make keyboard popups work on both variants
  -arrow-base: 20px;
  -arrow-rise: 10px;
  -boxpointer-gap: $base_padding;
  padding: $base_padding;

  .keyboard-key {
    @include button(normal, $c:$key_bg_color, $tc:$fg_color); // Yaru change: ↑↑↑

    &:focus { @include button(focus);}
    &:hover { @include button(hover, $c:$key_bg_color, $tc:$fg_color);} // Yaru change: ↑↑↑
    &:active { @include button(active, $c:$key_bg_color, $tc:$fg_color); } // Yaru change: ↑↑↑
    &:checked { @include button(checked, $c:$key_bg_color, $tc:$fg_color); } // Yaru change: ↑↑↑

    border-radius:$key_border_radius;
  }
}

// emoji
.emoji-page {
  .keyboard-key {
    background-color: transparent;
    border: none;
    color: initial;
  }
}

.emoji-panel {
  .keyboard-key:latched {
    border-color: st-lighten(-st-accent-color, 5%);
    background-color: -st-accent-color;
  }
}

// suggestions
.word-suggestions {
  @extend %title_4;
  spacing: 12px;
  min-height: 17pt;
  padding: $base_padding * 2;
  color: $osd_fg_color;
  color: $fg_color; // Yaru change: ↑↑↑

  // each suggestion
  StButton {
    margin: 0 3px;
    min-width: 32px;
    border-radius: 4px;
    padding: 0px $base_padding * 3;

    @include button(undecorated, $c:$key_bg_color, $tc:$fg_color); // Yaru change: ↑↑↑

    &:focus { @include button(focus);}
    &:hover { @include button(hover, $c:$key_bg_color, $tc:$fg_color);} // Yaru change: ↑↑↑
    &:active { @include button(active, $c:$key_bg_color, $tc:$fg_color); } // Yaru change: ↑↑↑
    &:checked { @include button(checked, $c:$key_bg_color, $tc:$fg_color); } // Yaru change: ↑↑↑
  }
}
